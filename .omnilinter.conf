[avoid hardcoding path separator (use std::path::MAIN_SEPARATOR)]
	tags fatal
	files *.rs
	match "'/'"
[avoid hardcoding path separator (use std::path::MAIN_SEPARATOR_STR)]
	tags fatal
	files *.rs
	match '"/"'

[add documentation (at least at module level)]
	files src/*.rs
	nomatch "^//!"

[XXX items]  # omnilinter: ignore
	files *.rs *.yml .omnilinter.conf
	match /XXX/  # omnilinter: ignore
[TODO items]  # omnilinter: ignore
	files *.rs *.yml .omnilinter.conf
	# XXX: improve this by adding flags to enable case insensitive matching
	match /[Tt][Oo][Dd][Oo]/  # omnilinter: ignore
[FIXME items]  # omnilinter: ignore
	files *.rs *.yml .omnilinter.conf
	# XXX: improve this by adding flags to enable case insensitive matching
	match /[Ff][Ii][Xx][Mm][Ee]/  # omnilinter: ignore

[omniparser does not exist]  # for some reason I misspell it sometimes
	tags fatal
	files *.rs /[A-Z]*
	match /omniparser/

[add license to the repository]
	tags fatal
	nofiles /LICENSE* /COPYING*

[add SPDX-FileCopyrightText]
	tags fatal
	files *.rs
	nomatch /^..? SPDX-FileCopyrightText:/
[add SPDX-License-Identifier]
	tags fatal
	files *.rs
	nomatch /^..? SPDX-License-Identifier:/

[add README.md]
	tags fatal
	nofiles /README.md

[add license field to package section of Cargo.toml]
	tags fatal
	files /Cargo.toml
	nomatch /^license(-file)? =/
[add readme field to package section of Cargo.toml]
	tags fatal
	nofiles README README.md README.txt  # these are picked up automatically by crates.io, see https://doc.rust-lang.org/cargo/reference/manifest.html#the-readme-field
	files /Cargo.toml
	nomatch /^readme =/
[add homepage field to package section of Cargo.toml]
	tags fatal
	files /Cargo.toml
	nomatch /^homepage =/

[add repository field to package section of Cargo.toml]
	tags fatal
	files /Cargo.toml
	nomatch /^repository =/
[add keywords field to package section of Cargo.toml]
	tags fatal
	files /Cargo.toml
	nomatch /^keywords =/
[add categories field to package section of Cargo.toml]
	tags fatal
	files /Cargo.toml
	nomatch /^categories =/

# XXX: requires process execution (#26)
#[comply with cargo fmt]
#	execok: "cargo fmt --check"
#[make all tests pass]
#	execok: "cargo test"
