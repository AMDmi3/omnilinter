name: CI
on: [ push, pull_request ]
jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ !matrix.required }}
    strategy:
      matrix:
        include:
          - { rust: "1.73", required: false }
          - { rust: "1.74", required: false }
          - { rust: stable, required: false }
          - { rust: nightly, required: true }
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - name: Build
        run: cargo build
        env:
          RUSTFLAGS: -Dwarnings
      - name: Test
        run: cargo test
      - name: Format check
        run: cargo fmt --check
      - name: Run omnilinter on its own repository (all checks)
        run: cargo run --quiet -- --color always --format=by-rule --config .omnilinter.conf .
      - name: Run omnilinter on its own repository (fatal checks)
        run: cargo run --quiet -- --color always --format=by-rule --config .omnilinter.conf --error-exitcode 1 --tags fatal .

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - name: Test
        run: cargo test
        env:
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - name: Collect coverage
        uses: actions-rs/grcov@v0.1
      - name: Submit coverage
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
