name: CI
on: [ push, pull_request ]
jobs:
  test:
    strategy:
      matrix:
        include:
          - { name: "Rust 1.80",   rust: "1.80",  os: ubuntu-latest, cargo_args: "" }
          - { name: "Rust stable", rust: stable,  os: ubuntu-latest, cargo_args: "" }
          - { name: "Rust nightly", rust: nightly, os: ubuntu-latest, cargo_args: "" }
          - { name: "Rust nightly, windows", rust: nightly, os: windows-latest, cargo_args: "" }
          - { name: "Rust nightly, macos", rust: nightly, os: macos-latest, cargo_args: "" }
          - { name: "Rust nightly, release", rust: nightly, os: ubuntu-latest, cargo_args: "--release" }
          - { name: "Rust nightly, nofeatures", rust: nightly, os: ubuntu-latest, cargo_args: "--no-default-features" }
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            target/
          key: cargo-${{ matrix.os }}-${{ matrix.rust }}-${{ matrix.cargo_args }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ matrix.os }}-${{ matrix.rust }}-${{ matrix.cargo_args }}-
            cargo-${{ matrix.os }}-${{ matrix.rust }}-
            cargo-${{ matrix.os }}-
      - name: Build
        run: cargo build ${{ matrix.cargo_args }}
        env:
          RUSTFLAGS: -Dwarnings
      - name: Install share files
        run: cd share && sudo make install
        if: ${{ !startsWith(matrix.os, 'windows') }}
      - name: Test
        run: cargo test ${{ matrix.cargo_args }}
      - name: Format check
        run: cargo fmt --check
      - name: Run omnilinter on its own repository (all checks)
        run: cargo --quiet run ${{ matrix.cargo_args }} -- --color always --format=by-rule --config .omnilinter.conf .
      - name: Run omnilinter on its own repository (fatal checks)
        run: cargo --quiet run ${{ matrix.cargo_args }} -- --color always --format=by-rule --config .omnilinter.conf --error-exitcode 1 --tags fatal .
